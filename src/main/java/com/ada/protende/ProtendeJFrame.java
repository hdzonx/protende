/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ada.protende;

import com.ada.PDFPrinter.PrinterPDF;
import com.ada.prestressedCalc.PrestressingForces;
import javax.swing.JOptionPane;
import util.Converter;

/**
 *
 * @author olgierd
 */
public class ProtendeJFrame extends javax.swing.JFrame {

    private SectionPropertiesJFrame sectionFrame;
    private MaterialJFrame materialFrame;
    private LoadJFrame loadFrame;

    /**
     * Creates new form ProtendeJFrame
     */
    public ProtendeJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prestressedTypeGroup = new javax.swing.ButtonGroup();
        executiveTypeGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        completePrestressingRadioBtn = new javax.swing.JRadioButton();
        limitedPrestressingRadioBtn = new javax.swing.JRadioButton();
        partialPrestressingRadioBtn = new javax.swing.JRadioButton();
        preTensionRadioBtn = new javax.swing.JRadioButton();
        bondedPostTensionRadioBtn = new javax.swing.JRadioButton();
        non_bondedPostTensionRadioBtn = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        calculatePrestressingButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lossOfPrestressingText = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newFileMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        materialMenu = new javax.swing.JMenuItem();
        geometryMenu = new javax.swing.JMenuItem();
        loadMenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenuItem();
        manualMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(890, 600));
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Programa para cálculo de Protensão");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 50, 880, 20);

        jLabel1.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Protende");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 890, 40);

        jLabel3.setText("Tipo de protensão");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 90, 110, 19);

        prestressedTypeGroup.add(completePrestressingRadioBtn);
        completePrestressingRadioBtn.setText("Completa");
        getContentPane().add(completePrestressingRadioBtn);
        completePrestressingRadioBtn.setBounds(50, 120, 120, 23);

        prestressedTypeGroup.add(limitedPrestressingRadioBtn);
        limitedPrestressingRadioBtn.setText("Limitada");
        getContentPane().add(limitedPrestressingRadioBtn);
        limitedPrestressingRadioBtn.setBounds(50, 150, 110, 23);

        prestressedTypeGroup.add(partialPrestressingRadioBtn);
        partialPrestressingRadioBtn.setText("Parcial");
        getContentPane().add(partialPrestressingRadioBtn);
        partialPrestressingRadioBtn.setBounds(50, 180, 110, 23);

        executiveTypeGroup.add(preTensionRadioBtn);
        preTensionRadioBtn.setText("Armadura pré-tracionada");
        getContentPane().add(preTensionRadioBtn);
        preTensionRadioBtn.setBounds(500, 120, 180, 23);

        executiveTypeGroup.add(bondedPostTensionRadioBtn);
        bondedPostTensionRadioBtn.setText("Armadura pós-tracionada aderente");
        getContentPane().add(bondedPostTensionRadioBtn);
        bondedPostTensionRadioBtn.setBounds(500, 150, 230, 23);

        executiveTypeGroup.add(non_bondedPostTensionRadioBtn);
        non_bondedPostTensionRadioBtn.setText("Armadura pós-tracionada não aderente");
        getContentPane().add(non_bondedPostTensionRadioBtn);
        non_bondedPostTensionRadioBtn.setBounds(500, 180, 250, 23);

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(30, 110, 330, 110);

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(490, 110, 330, 110);

        jLabel4.setText("Método executivo");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(490, 90, 110, 19);

        calculatePrestressingButton.setText("Calcular");
        calculatePrestressingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculatePrestressingButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calculatePrestressingButton);
        calculatePrestressingButton.setBounds(30, 290, 90, 25);

        jLabel5.setText("Perda de protensão (%)");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 240, 180, 19);
        getContentPane().add(lossOfPrestressingText);
        lossOfPrestressingText.setBounds(220, 240, 80, 20);

        jMenu1.setText("Arquivo");

        newFileMenu.setText("Novo");
        jMenu1.add(newFileMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Dados");

        materialMenu.setText("Material");
        materialMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialMenuActionPerformed(evt);
            }
        });
        jMenu2.add(materialMenu);

        geometryMenu.setText("Geometria");
        geometryMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geometryMenuActionPerformed(evt);
            }
        });
        jMenu2.add(geometryMenu);

        loadMenu.setText("Carregamento");
        loadMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuActionPerformed(evt);
            }
        });
        jMenu2.add(loadMenu);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ajuda");

        aboutMenu.setText("Sobre");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        jMenu3.add(aboutMenu);

        manualMenu.setText("Manual");
        jMenu3.add(manualMenu);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        new licenseJFrame().setVisible(true);    }//GEN-LAST:event_aboutMenuActionPerformed


    private void materialMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialMenuActionPerformed
        if (materialFrame == null) {
            materialFrame = new MaterialJFrame();
        }
        materialFrame.setVisible(true);
    }//GEN-LAST:event_materialMenuActionPerformed

    private void geometryMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geometryMenuActionPerformed
        if (sectionFrame == null) {
            sectionFrame = new SectionPropertiesJFrame();
        }
        sectionFrame.setVisible(true);
    }//GEN-LAST:event_geometryMenuActionPerformed

    private void loadMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuActionPerformed
        if (loadFrame == null) {
            loadFrame = new LoadJFrame();
        }
        loadFrame.setVisible(true);
    }//GEN-LAST:event_loadMenuActionPerformed

    private void calculatePrestressingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculatePrestressingButtonActionPerformed
        String tensionType = "";
        String typePrestressing = "";
        //type tension analysis
        if (preTensionRadioBtn.isSelected()) {
            System.out.println("Pré-tração selecionado");
            tensionType = "preTension";
        }
        if (bondedPostTensionRadioBtn.isSelected()) {
            System.out.println("Pós-tração com armadura aderente selecionado");
            tensionType = "bondedPostTension";
        }
        if (non_bondedPostTensionRadioBtn.isSelected()) {
            System.out.println("Pós-tração com armadura não aderente selecionado");
            tensionType = "non_bondedPostTension";
        }
        // type prestressing analysis
        if (completePrestressingRadioBtn.isSelected()) {
            System.out.println("Protenção completa");
            typePrestressing = "Total";
        }
        if (limitedPrestressingRadioBtn.isSelected()) {
            System.out.println("Protenção limitada");
            typePrestressing = "Limited";
        }
        if (partialPrestressingRadioBtn.isSelected()) {
            System.out.println("Protenção partial ainda não implementada");
            typePrestressing = "partial";
            JOptionPane.showMessageDialog(null, "Protenção parcial não implementada no programma");
            throw new IllegalArgumentException("partial prestressing not implemented.");
        }
        if (tensionType.equals("")) {
            JOptionPane.showMessageDialog(null, "Tipo método exectivo não selecionado.");
            throw new IllegalArgumentException("execution type not selected.");
        }
        if (typePrestressing.equals("")) {
            JOptionPane.showMessageDialog(null, "Tipo de protensão não selecionado.");
            throw new IllegalArgumentException("prestressing type not selected.");
        }
        //Section Properties
        double area = 0.0;
        double inertia = 0.0;
        double excentricity = 0.0;
        double superiorDist = 0.0;
        double inferiorDist = 0.0;
        String sectionType = "";

        try {
            area = sectionFrame.getAreaSection();
            inertia = sectionFrame.getInertia();
            excentricity = sectionFrame.getPrestressExcentricity();
            superiorDist = sectionFrame.getSuperiorFiberDist();
            inferiorDist = sectionFrame.getInferiorFiberDist();
            sectionType = sectionFrame.getSectionType();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha as propriedades da seção transversal");
            e.printStackTrace();
        }
        //Load Properties
        double selfLoadMoment = 0.0;
        double othersDeadLoadMoment = 0.0;
        double principalLiveLoadMoment = 0.0;
        double othersLiveLoadMoment = 0.0;
        double psi_1 = 0.0;
        double psi_2 = 0.0;

        try {
            selfLoadMoment = loadFrame.getSelfLoadMoment();
            othersDeadLoadMoment = loadFrame.getOthersDeadLoadMoment();
            principalLiveLoadMoment = loadFrame.getPrincipalLiveLoadMoment();
            othersLiveLoadMoment = loadFrame.getOthersLiveLoadMoment();
            psi_1 = loadFrame.getPsi_1();
            psi_2 = loadFrame.getPsi_2();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha os valores de cargas de momentos fletores");
            e.printStackTrace();
        }
        //Material Properties
        double fck = 0.0;
        double tendonTension = 0.0;
        String tendonType = "";
        String relaxationType = "";

        try {
            fck = materialFrame.getFck();
            tendonTension = materialFrame.getTendonTension();
            relaxationType = materialFrame.getRelaxationType();
            tendonType = materialFrame.getTendonType();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha as propriedades de material");
            e.printStackTrace();

        }

        if (lossOfPrestressingText.equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o valor das perdas de protensão totais");
            throw new IllegalArgumentException("Loss of prestressing cannot be empty");
        }
        double lossOfPrestressing = 0.01 * Converter.textToDouble(lossOfPrestressingText);

        PrestressingForces comp = new PrestressingForces.Builder()
                .inertia(inertia)
                .area(area)
                .prestressingExcentricity(excentricity)
                .inferiorFiberDistance(inferiorDist)
                .superiorFiberDistance(superiorDist)
                .selfLoadMoment(selfLoadMoment)
                .othersDeadLoad(othersDeadLoadMoment)
                .liveLoadPrincipalMoment(principalLiveLoadMoment)
                .liveLoadSecundaryMoment(othersLiveLoadMoment)
                .psi_1_Coeff(psi_1)
                .psi_2_Coeff(psi_2)
                .fck(fck)
                .sectionType(sectionType)
                .typePrestressing(typePrestressing)
                .lossPrestress(lossOfPrestressing)
                .posTensionOrPreTension(tensionType)
                .tendonType(tendonType)
                .f_ptk(tendonTension)
                .relaxationType(relaxationType)
                .build();

        try {
            comp.run();
        } catch (Exception ex) {
            System.getLogger(ProtendeJFrame.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }

        //Print pdf file with results
        PrinterPDF pdf = new PrinterPDF(comp.getEffectivePrestressForce(), comp.getFinalForceWithLoss());

    }//GEN-LAST:event_calculatePrestressingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProtendeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProtendeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProtendeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProtendeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProtendeJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JRadioButton bondedPostTensionRadioBtn;
    private javax.swing.JButton calculatePrestressingButton;
    private javax.swing.JRadioButton completePrestressingRadioBtn;
    private javax.swing.ButtonGroup executiveTypeGroup;
    private javax.swing.JMenuItem geometryMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton limitedPrestressingRadioBtn;
    private javax.swing.JMenuItem loadMenu;
    private javax.swing.JTextField lossOfPrestressingText;
    private javax.swing.JMenuItem manualMenu;
    private javax.swing.JMenuItem materialMenu;
    private javax.swing.JMenuItem newFileMenu;
    private javax.swing.JRadioButton non_bondedPostTensionRadioBtn;
    private javax.swing.JRadioButton partialPrestressingRadioBtn;
    private javax.swing.JRadioButton preTensionRadioBtn;
    private javax.swing.ButtonGroup prestressedTypeGroup;
    // End of variables declaration//GEN-END:variables
}
